/*
 * afstoken - pioctl interface for new common token data structures.
 *
 * revised following suggestions from lha@kth.se 20070511, 20070513
 */

/* this file is in the public domain.  Do what thou wilt. */

const AFSTOKEN_RK_TIX_MAX = 12000; 	/* Matches entry in rxkad.h */
const AFSTOKEN_GK_TOK_MAX = 1048576;	/* Matches RXGK_MAXDATA in rxgk_int.xg */

struct token_rxkad {
    afs_int32 rk_viceid;
    afs_int32 rk_kvno;
    opaque rk_key[8];
    afs_int32 rk_begintime;
    afs_int32 rk_endtime;
    afs_int32 rk_primary_flag;
    opaque rk_ticket<AFSTOKEN_RK_TIX_MAX>;
};

struct token_rxgk {
    afs_int64 gk_viceid;	/* 64-bits to be future-proof. */
    afs_int32 gk_enctype;
    afs_int32 gk_level;		/* rxgk_int.xg has this as an enum. */
    afs_uint32 gk_lifetime;
    afs_uint32 gk_bytelife;
    struct afs_time64 gk_expiration;
    opaque gk_token<AFSTOKEN_GK_TOK_MAX>;
    opaque gk_k0<AFSTOKEN_GK_TOK_MAX>;
};

const AFSTOKEN_UNION_NOAUTH = 0;
const AFSTOKEN_UNION_KAD = 2;
const AFSTOKEN_UNION_GK = 4;
union ktc_tokenUnion switch (afs_int32 at_type) {
    case AFSTOKEN_UNION_KAD:
	token_rxkad at_kad;
    case AFSTOKEN_UNION_GK:
	token_rxgk at_gk;
};

const AFSTOKEN_LENGTH_MAX = 16384;
typedef opaque token_opaque<AFSTOKEN_LENGTH_MAX>;

const AFSTOKEN_EX_SETPAG = 0x00000001; /* set tokens in new pag */
const AFSTOKEN_MAX = 8;
const AFSTOKEN_CELL_MAX = 64;

struct ktc_setTokenData {
    afs_int32 flags;
    string cell<AFSTOKEN_CELL_MAX>;
    token_opaque tokens<AFSTOKEN_MAX>;
};
